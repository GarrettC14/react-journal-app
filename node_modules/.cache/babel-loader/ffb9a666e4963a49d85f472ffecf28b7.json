{"ast":null,"code":"var _jsxFileName = \"/Users/daiyan/Desktop/react-journal-app/src/app/calendar/InputField/InputField.js\";\nimport React, { useState } from 'react';\nimport styles from './InputField.module.css';\nimport Button from '@material-ui/core/Button';\nimport Aux from '../../../Auxiliary/Auxiliary';\nimport SaveIcon from '@material-ui/icons/Save';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport FormatDate from './FormatDate';\nimport SubmitNewEntry from './EventHandlers/SubmitNewEntry';\n\nconst InputField = ({\n  value\n}) => {\n  const [shouldRender, setShouldRender] = useState(false);\n  const [description, setDescription] = useState(\"\"); //potential problem - may need to convert this into an INT!\n  //function returns \"20210309\" (YYYYMMDD)\n\n  const UUID = FormatDate({\n    value\n  });\n\n  const saveEntry = () => {\n    SubmitNewEntry(UUID, description);\n  }; //can confirm that the const UUID returns the selected date. so why isnt this working \n\n\n  const testUUID = () => {\n    console.log(UUID);\n  };\n\n  let textInput;\n\n  if (shouldRender) {\n    textInput = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextareaAutosize, {\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      style: {\n        margin: \"auto\",\n        display: \"flex\",\n        width: \"60%\",\n        height: \"125px\",\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.CenterButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: e => saveEntry(),\n      startIcon: /*#__PURE__*/React.createElement(SaveIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 40\n        }\n      }),\n      color: \"primary\",\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(Button, {\n      startIcon: /*#__PURE__*/React.createElement(DeleteIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 40\n        }\n      }),\n      onClick: e => setShouldRender(!shouldRender),\n      color: \"secondary\",\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, \"Discard\")));\n  } else {\n    textInput = null;\n  }\n\n  return /*#__PURE__*/React.createElement(Aux, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: e => setShouldRender(!shouldRender),\n    size: \"medium\",\n    style: {\n      margin: \"auto\",\n      display: \"flex\",\n      marginTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Create New Entry\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: e => testUUID(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Click to test UUID\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, textInput));\n};\n\nexport default InputField;","map":{"version":3,"sources":["/Users/daiyan/Desktop/react-journal-app/src/app/calendar/InputField/InputField.js"],"names":["React","useState","styles","Button","Aux","SaveIcon","DeleteIcon","TextareaAutosize","FormatDate","SubmitNewEntry","InputField","value","shouldRender","setShouldRender","description","setDescription","UUID","saveEntry","testUUID","console","log","textInput","e","target","margin","display","width","height","marginTop","CenterButton"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,GAAP,MAAgB,8BAAhB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;;AAIA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAC5B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C,CAF4B,CAI5B;AACA;;AACA,QAAMe,IAAI,GAAGR,UAAU,CAAC;AAACG,IAAAA;AAAD,GAAD,CAAvB;;AAEA,QAAMM,SAAS,GAAG,MAAM;AACpBR,IAAAA,cAAc,CAACO,IAAD,EAAOF,WAAP,CAAd;AACH,GAFD,CAR4B,CAY5B;;;AAEA,QAAMI,QAAQ,GAAG,MAAM;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACH,GAFD;;AAOI,MAAIK,SAAJ;;AACA,MAAIT,YAAJ,EAAkB;AACdS,IAAAA,SAAS,gBACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,gBAAD;AACA,MAAA,KAAK,EAAIP,WADT;AAEA,MAAA,QAAQ,EAAIQ,CAAC,IAAIP,cAAc,CAACO,CAAC,CAACC,MAAF,CAASZ,KAAV,CAF/B;AAGA,MAAA,KAAK,EAAI;AACLa,QAAAA,MAAM,EAAC,MADF;AAELC,QAAAA,OAAO,EAAC,MAFH;AAGLC,QAAAA,KAAK,EAAC,KAHD;AAILC,QAAAA,MAAM,EAAC,OAJF;AAKLC,QAAAA,SAAS,EAAC;AALL,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAYQ;AAAK,MAAA,SAAS,EAAG1B,MAAM,CAAC2B,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AACI,MAAA,OAAO,EAAIP,CAAC,IAAIL,SAAS,EAD7B;AAEI,MAAA,SAAS,eAAE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFf;AAGI,MAAA,KAAK,EAAG,SAHZ;AAII,MAAA,OAAO,EAAG,WAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI,oBAAC,MAAD;AACI,MAAA,SAAS,eAAE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADf;AAEI,MAAA,OAAO,EAAIK,CAAC,IAAIT,eAAe,CAAC,CAACD,YAAF,CAFnC;AAGI,MAAA,KAAK,EAAG,WAHZ;AAII,MAAA,OAAO,EAAG,WAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARJ,CAZR,CADA;AA8BH,GA/BD,MA+BO;AACHS,IAAAA,SAAS,GAAG,IAAZ;AACH;;AAEL,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACA,IAAA,OAAO,EAAC,WADR;AAEA,IAAA,KAAK,EAAG,SAFR;AAGA,IAAA,OAAO,EAAGC,CAAC,IAAIT,eAAe,CAAC,CAACD,YAAF,CAH9B;AAIA,IAAA,IAAI,EAAG,QAJP;AAKA,IAAA,KAAK,EAAE;AACHY,MAAAA,MAAM,EAAE,MADL;AAEHC,MAAAA,OAAO,EAAE,MAFN;AAGHG,MAAAA,SAAS,EAAC;AAHP,KALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAaI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAIN,CAAC,IAAIJ,QAAQ,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAbJ,CADA,eAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMG,SAAN,CAhBA,CADJ;AAoBH,CA7ED;;AA+EA,eAAeX,UAAf","sourcesContent":["import React, {useState} from 'react'\nimport styles from './InputField.module.css'\nimport Button from '@material-ui/core/Button'\nimport Aux from '../../../Auxiliary/Auxiliary'\nimport SaveIcon from '@material-ui/icons/Save'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize'\nimport FormatDate from './FormatDate'\nimport SubmitNewEntry from './EventHandlers/SubmitNewEntry'\n\n\n\nconst InputField = ({value}) => {\n    const [shouldRender, setShouldRender] = useState(false)\n    const [description, setDescription] = useState(\"\")\n\n    //potential problem - may need to convert this into an INT!\n    //function returns \"20210309\" (YYYYMMDD)\n    const UUID = FormatDate({value});\n\n    const saveEntry = () => {\n        SubmitNewEntry(UUID, description);   \n    }\n\n    //can confirm that the const UUID returns the selected date. so why isnt this working \n\n    const testUUID = () => {\n        console.log(UUID)\n    }\n    \n\n\n\n        let textInput\n        if (shouldRender) {\n            textInput = (\n            <div>\n                <TextareaAutosize\n                value = {description}\n                onChange = {e => setDescription(e.target.value)} \n                style = {{\n                    margin:\"auto\",\n                    display:\"flex\",\n                    width:\"60%\",\n                    height:\"125px\",\n                    marginTop:\"10px\"\n                }}\n                />\n                    <div className ={styles.CenterButton}>\n                        <Button\n                            onClick = {e => saveEntry()} \n                            startIcon={<SaveIcon/>}\n                            color = \"primary\"\n                            variant = \"contained\">\n                                Save\n                        </Button>\n                        <Button \n                            startIcon={<DeleteIcon/>}\n                            onClick= { e => setShouldRender(!shouldRender)}\n                            color = \"secondary\"\n                            variant = \"contained\">\n                                Discard\n                        </Button>\n                    </div>\n            </div>)\n        } else {\n            textInput = null\n        }\n\n    return(\n        <Aux>\n        <div>\n            <Button \n            variant=\"contained\" \n            color = \"primary\" \n            onClick= {e => setShouldRender(!shouldRender)}\n            size = \"medium\"\n            style={{\n                margin: \"auto\",\n                display: \"flex\",\n                marginTop:\"10px\"\n             }}>\n                Create New Entry\n            </Button>\n            <Button onClick = {e => testUUID()}>Click to test UUID</Button>\n        </div>\n        <div>{textInput}</div>\n    </Aux>\n    )\n}\n\nexport default InputField\n"]},"metadata":{},"sourceType":"module"}